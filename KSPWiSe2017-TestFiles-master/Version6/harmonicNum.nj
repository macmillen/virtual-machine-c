void main() {
    local Integer x;
    local Integer i;
    local Integer numerator;
    local Integer denominator;
    local Integer divisor;
    local Integer decimalPlaces;
    decimalPlaces = 10;
    x = readInteger();
    i = 2;
    numerator = 1;
    denominator = 1;
    while(i <= x) {
        numerator = numerator * i + denominator * 1;
        denominator = denominator * i;
        i = i + 1;
    }
    //reduce
    divisor = gcd(numerator, denominator);
    numerator = numerator / divisor;
    denominator = denominator / divisor;
    // writeInteger(numerator);
    //writeCharacter('\n');
    //writeCharacter('-');
    //writeCharacter('\n');
    //writeInteger(denominator);
    //writeCharacter('\n');
    numerator = numerator * powerOf(10, decimalPlaces);
    x = numerator / denominator;
    i = (decimalPlaces -1);
    writeInteger(x / powerOf(10, decimalPlaces));
    writeCharacter(',');
    while (i > 0) {
        writeInteger(x / powerOf(10, i) % 10);
        i = i - 1;
    }
    writeCharacter('\n');
}

Integer gcd(Integer x, Integer y) {
    while (x != y) {
        if(x > y) {
            x = x - y;
        } else {
            y = y -x;
        }
    }
    return x;
}

Integer powerOf(Integer base, Integer exponent) {
    local Integer res;
    res = base;
    while(exponent > 1) {
        res = res * base;
        exponent = exponent - 1;
    }
    return res;
}